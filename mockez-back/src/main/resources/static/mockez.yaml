openapi: "3.0.0"
info:
  title: Mockez API
  description: Website MOCKEZ generates data for system testing.
  version: 0.0.1
paths:
  /api/v1/type:
    parameters:
      - in: header
        name: get-type
        schema:
          type: string
        required: true
    get:
      operationId: getType
      tags:
        - Type
      description: Get all Type from data
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Type'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /api/v1/category:
    parameters:
      - in: header
        name: get-category
        schema:
          type: string
        required: true
    get:
      operationId: getCategory
      tags:
        - Category
      description: Get all category from data
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /api/v1/gentype:
    parameters:
      - in: header
        name: get-gentype
        schema:
          type: string
        required: true
    get:
      operationId: getGenType
      tags:
        - GenType
      description: Get all GenType from data
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenType'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /api/v1/category/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: The Category ID
        schema:
          type: string
      - in: header
        name: get-category-byId
        schema:
          type: string
        required: true
    get:
      operationId: getCategoryById
      tags:
        - Category
      description: Returns  a category by id
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /api/v1/gentype/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: The GenType ID
        schema:
          type: string
      - in: header
        name: get-gentype-byId
        schema:
          type: string
        required: true
    get:
      operationId: getGenTypeById
      tags:
        - GenType
      description: Returns  a gentype by id
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenType'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /api/v1/gentype?typeId=typeId:
    parameters:
      - in: query
        name: getGenTypeByTypeId
        style: deepObject
        allowReserved: true
        schema:
          type: object

    get:
      operationId: getGenTypeByTypeId
      tags:
        - GenType
      description: Returns  a gentype by type id
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenType'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
components:
  schemas:
    Field:
      type: object
      required:
        - id
        - name
        - type
        - genType
        - option
      description: FIELD table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        name:
          type: string
          description: name of field
        type:
          $ref: '#/components/schemas/Type'
        genType:
          $ref: '#/components/schemas/GenType'
        option:
          $ref: '#/components/schemas/Option'
    Type:
      type: object
      required:
        - id
        - type
        - description
      description: TYPE table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        type:
          type: string
          description: name of field
        description:
          type: string
          description: type in SQL
    GenType:
      type: object
      required:
        - id
        - type
        - description
        - category
      description: GENTYPE table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        type:
          type: string
          description: type for generate
        description:
          type: string
          description: description for generate type
        category:
          $ref: '#/components/schemas/Category'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
    Category:
      type: object
      required:
        - id
        - type
        - description
      description: CATEGORY table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        type:
          type: string
          description: name of category
        description:
          type: string
          description: description for generate type
        genTypes:
          type: array
          items:
            $ref: '#/components/schemas/GenType'
    Data:
      type: object
      required:
        - id
        - value
        - genType
      description: DATA table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        value:
          type: string
          description: value of data
        genType:
          $ref: '#/components/schemas/GenType'
    Option:
      type: object
      required:
        - id
        - blank
      description: OPTION table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        blank:
          default: 0
          type: integer
          description: blank percent