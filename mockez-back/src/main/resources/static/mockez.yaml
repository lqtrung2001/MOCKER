openapi: "3.0.3"
info:
  title: Mockez API
  description: Website MOCKEZ generates data for system testing.
  version: 0.0.1
paths:
  /type:
    get:
      operationId: getTypes
      tags:
        - Type
      description: Get all Type from data
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Type'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /category:
    get:
      operationId: getCategories
      tags:
        - Category
      description: Get all category from data
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /category/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: The Category ID
        schema:
          type: string
    get:
      operationId: getCategory
      tags:
        - Category
      description: Return a category
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Category'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /gentype/{id}:
    parameters:
      - in: path
        name: id
        required: true
        description: The GenType ID
        schema:
          type: string
    get:
      operationId: getGenType
      tags:
        - GenType
      description: Return a gentype
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenType'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /gentype/{typeId}:
    parameters:
      - in: path
        name: typeId
        required: true
        description: The typeId
        schema:
          type: string
    get:
      operationId: getGenTypeByTypeId
      tags:
        - GenType
      description: Return a gentype by typeId
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenType'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /gentype:
    get:
      operationId: getGenTypes
      tags:
        - GenType
      description: Get all GenType from data
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GenType'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
  /generate:
    post:
      operationId: generate
      tags:
        - Generate
      description: Generate data
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenerateRequestBody'
      responses:
        200:
          description: The query is successful
          content:
            application/json:
              schema:
                type: string
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/AuthenticationError'
        403:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        500:
          $ref: '#/components/responses/ServerError'
components:
  schemas:
    Field:
      type: object
      required:
        - id
        - name
        - type
        - genType
        - option
      description: FIELD table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        name:
          type: string
          description: name of field
        type:
          $ref: '#/components/schemas/Type'
        genType:
          $ref: '#/components/schemas/GenType'
        option:
          $ref: '#/components/schemas/Option'
    Type:
      type: object
      required:
        - id
        - type
        - description
      description: TYPE table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        type:
          type: string
          description: name of field
        description:
          type: string
          description: type in SQL
    GenType:
      type: object
      required:
        - id
        - type
        - description
        - category
      description: GENTYPE table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        type:
          type: string
          description: type for generate
        description:
          type: string
          description: description for generate type
        category:
          $ref: '#/components/schemas/Category'
        data:
          type: array
          items:
            $ref: '#/components/schemas/Data'
    Category:
      type: object
      required:
        - id
        - type
        - description
      description: CATEGORY table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        type:
          type: string
          description: name of category
        description:
          type: string
          description: description for generate type
        genTypes:
          type: array
          items:
            $ref: '#/components/schemas/GenType'
    Data:
      type: object
      required:
        - id
        - value
        - genType
      description: DATA table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        value:
          type: string
          description: value of data
        genType:
          $ref: '#/components/schemas/GenType'
    Option:
      type: object
      required:
        - id
        - blank
      description: OPTION table
      properties:
        id:
          readOnly: true
          type: string
          description: id of table
        blank:
          default: 0
          type: integer
          description: blank percent
    Error:
      description: Schema for error response body
      type: object
      properties:
        timestamp:
          type: string
        status:
          type: integer
        error:
          type: string
        message:
          type: string
        path:
          type: string
        code:
          enum:
            - UNEXPECTED_EXCEPTION
            - AUTHENTICATION_EXCEPTION
            - PERMISSION_EXCEPTION
            - BAD_REQUEST
            - NOT_FOUND
            - CONFLICT
            - INVALID_STATUS
            - INVALID_PROPERTIES
            - ACTION_NOT_ALLOWED
          description: |
            Ged error code:
            * UNEXPECTED_EXCEPTION - unexpected error.
            * AUTHENTICATION_EXCEPTION - user is not authenticated.
            * PERMISSION_EXCEPTION - user does not have permission to perform the action.
            * BAD_REQUEST - the request is wrong.
            * NOT_FOUND - resource not found.
            * CONFLICT - business error.
            * INVALID_STATUS - resource status is not valid.
            * INVALID_PROPERTIES - the properties is not valid.
            * ACTION_NOT_ALLOWED - the action not allowed.
        additionalMessage:
          type: string
    GenerateRequestBody:
      type: object
      description: The body of generate request
      required:
        - row
        - format
        - tableName
        - isIncludeCreateTable
        - fields
      properties:
        row:
          readOnly: true
          type: integer
          default: 0
          description: Row number of data
        format:
          readOnly: true
          type: string
          default: "SQL"
          description: Format of data
        tableName:
          readOnly: true
          type: string
          description: Name of table
        isIncludeCreateTable:
          readOnly: true
          type: boolean
          default: false
          description: Include create table
        fields:
          readOnly: true
          type: array
          items:
            $ref: '#/components/schemas/Field'
          description: Fields of table
  responses:
    NotFound:
      description: The specified resource was not found
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    AuthenticationError:
      description: Authentication Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Unauthorized, access to this resource is not allowed
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    BadRequest:
      description: Bad request, invalid query syntax
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'
    ServerError:
      description: Internal Server Error
      content:
        application/problem+json:
          schema:
            $ref: '#/components/schemas/Error'